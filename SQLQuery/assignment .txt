assignment 
Q1. How many transactions were completed during each marketing campaign?
SELECT 
    mc.campaign_id,
    mc.campaign_name,
    COUNT(t.transaction_id) AS transactions_count
FROM 
    marketing_campaigns mc
LEFT JOIN 
    transactions t
ON 
    mc.product_id = t.product_id
WHERE
    t.purchase_date BETWEEN mc.start_date AND mc.end_date
GROUP BY 
    mc.campaign_id, mc.campaign_name;


2. Which product had the highest sales quantity?
SELECT 
    sc.product_id, 
    sc.product_name, 
    SUM(t.quantity) AS total_quantity
FROM 
    sustainable_clothing sc
JOIN 
    transactions t
ON 
    sc.product_id = t.product_id
GROUP BY 
    sc.product_id, sc.product_name
ORDER BY 
    total_quantity DESC
LIMIT 1;


3. What is the total revenue generated from each marketing campaign?
SELECT  
    mc.campaign_id,
    mc.campaign_name,
    SUM(t.quantity * sc.price) AS total_revenue
FROM 
    marketing_campaigns mc
JOIN 
    transactions t
ON 
    mc.product_id = t.product_id
JOIN 
    sustainable_clothing sc
ON 
    t.product_id = sc.product_id
WHERE 
    t.purchase_date BETWEEN mc.start_date AND mc.end_date
GROUP BY 
    mc.campaign_id, mc.campaign_name
ORDER BY 
    total_revenue DESC;



 4. What is the top-selling product category based on the total revenue generated?
SELECT 
    sc.category,
    SUM(t.quantity * sc.price) AS total_revenue
FROM 
    transactions t
JOIN 
    sustainable_clothing sc
ON 
    t.product_id = sc.product_id
GROUP BY 
    sc.category
ORDER BY 
    total_revenue DESC
LIMIT 1;


5. Which products had a higher quantity sold compared to the average quantity sold?
SELECT
    sc.product_id,
    sc.product_name,
    SUM(t.quantity) AS total_quantity
FROM
    sustainable_clothing sc
JOIN
    transactions t
ON
    sc.product_id = t.product_id
GROUP BY
    sc.product_id, sc.product_name
HAVING
    SUM(t.quantity) > AVG(t.quantity)
ORDER BY
    total_quantity DESC;


6.What is the average revenue generated per day during the marketing campaigns?

DECLARE @total_revenue DECIMAL(12, 2);

-- Calculate total revenue
SELECT @total_revenue = SUM(t.quantity * sc.price)
FROM transactions t
JOIN sustainable_clothing sc ON t.product_id = sc.product_id;

-- Query to get product revenue and percentage contribution
SELECT
    sc.product_id,
    sc.product_name,
    SUM(t.quantity * sc.price) AS product_revenue,
    100.0 * SUM(t.quantity * sc.price) / @total_revenue AS percentage_contribution
FROM
    sustainable_clothing sc
JOIN
    transactions t ON sc.product_id = t.product_id
GROUP BY
    sc.product_id, sc.product_name
ORDER BY
    product_revenue DESC;
7......................
SELECT 
    sc.product_id,
    sc.product_name,
    SUM(t.quantity * sc.price) AS total_revenue,
    ROUND((SUM(t.quantity * sc.price) / SUM(SUM(t.quantity * sc.price)) OVER ()) * 100, 2) AS contribution_percentage
FROM sustainable_clothing sc
JOIN transactions t ON sc.product_id = t.product_id
GROUP BY sc.product_id, sc.product_name
ORDER BY contribution_percentage DESC;

-- 8. Compare the average quantity sold during marketing campaigns to outside the marketing campaigns

-- 9. Compare the revenue generated by products inside the marketing campaigns to outside the campaigns

10. 10. Rank the products by their average daily quantity sold
SELECT 
    sc.product_id,
    sc.product_name,
    AVG(t.quantity) / COUNT(DISTINCT t.purchase_date) AS avg_daily_quantity_sold,
    DENKRANK() OVER (ORDER BY AVG(t.quantity) / COUNT(DISTINCT t.purchase_date) DESC) AS rank
FROM transactions t
JOIN sustainable_clothing sc ON t.product_id = sc.product_id
GROUP BY sc.product_id, sc.product_name
ORDER BY rank;
A-------------------------------------------------------------------2
--- 1. How many pubs are located in each country??
SELECT country, COUNT(*) AS number_of_pubs
FROM pubs
GROUP BY country;


---2. What is the total sales amount for each pub, including the beverage price and quantity sold?
SELECT s.pub_id, p.pub_name, SUM(b.price_per_unit * s.quantity) AS total_sales_amount
FROM sales s
JOIN beverages b ON s.beverage_id = b.beverage_id
JOIN pubs p ON s.pub_id = p.pub_id
GROUP BY s.pub_id, p.pub_name;


3.Which pub has the highest average rating?
SELECT r.pub_id, p.pub_name, AVG(r.rating) AS average_rating
FROM ratings r
JOIN pubs p ON r.pub_id = p.pub_id
GROUP BY r.pub_id, p.pub_name
ORDER BY average_rating DESC
LIMIT 1;

-4. What are the top 5 beverages by sales quantity across all pubs?
SELECT b.beverage_name, 
SUM(s.quantity) AS total_quantity_sold
FROM sales s
JOIN beverages b 
ON s.beverage_id = b.beverage_id
GROUP BY b.beverage_name
ORDER BY total_quantity_sold DESC
LIMIT 5;

5. How many sales transactions occurred on each date?
SELECT transaction_date, 
COUNT(*) AS number_of_transactions
FROM sales
GROUP BY transaction_date
ORDER BY transaction_date;


6.Find the name of someone that had cocktails and which pub they had it in.
SELECT r.customer_name, p.pub_name
FROM sales s
JOIN beverages b ON s.beverage_id = b.beverage_id
JOIN pubs p ON s.pub_id = p.pub_id
JOIN ratings r ON s.pub_id = r.pub_id
WHERE b.category = 'Cocktail';


.7. What is the average price per unit for each category of beverages, excluding the category 'Spirit'?
SELECT category, AVG(price_per_unit) AS average_price_per_unit
FROM beverages
WHERE category <> 'Spirit'
GROUP BY category;

--8. Which pubs have a rating higher than the average rating of all pubs?
SELECT p.pub_id, p.pub_name, AVG(r.rating) AS pub_average_rating
FROM ratings r
JOIN pubs p 
ON r.pub_id = p.pub_id
GROUP BY p.pub_id, p.pub_name
HAVING 
AVG(r.rating) > (SELECT AVG(rating) FROM ratings);



---9. What is the running total of sales amount for each pub, ordered by the transaction date?
SELECT 
    s.pub_id, 
    p.pub_name, 
    s.transaction_date, 
    SUM(b.price_per_unit * s.quantity) OVER (PARTITION BY s.pub_id ORDER BY s.transaction_date) AS runningtotal
FROM sales s
JOIN beverages b ON s.beverage_id = b.beverage_id
JOIN pubs p ON s.pub_id = p.pub_id
ORDER BY s.pub_id, s.transaction_date;


-- Average price per unit for each category in each country
SELECT 
    country,
    category,
    AVG(price_per_unit) OVER (PARTITION BY country, category) AS average_price_per_unit
FROM (
    SELECT 
        p.country,
        b.category,
        b.price_per_unit
    FROM beverages b
    JOIN sales s ON b.beverage_id = s.beverage_id
    JOIN pubs p ON s.pub_id = p.pub_id
) AS subquery
ORDER BY country, category;

---10. For each country, what is the average price per unit of beverages in each category, and what is the overall average price per unit of beverages across all categories?

-- Overall average price per unit across all categories in each country
SELECT 
    country,
    AVG(price_per_unit) OVER (PARTITION BY country) AS overall_average_price_per_unit
FROM (
    SELECT 
        p.country,
        b.price_per_unit
    FROM beverages b
    JOIN sales s ON b.beverage_id = s.beverage_id
    JOIN pubs p ON s.pub_id = p.pub_id
) AS subquery
ORDER BY country;


--- 11. For each pub, what is the percentage contribution of each category of beverages to the total sales amount, and what is the pub's overall sales amount?
SELECT 
    p.pub_id,
    p.pub_name,
    b.category,
    SUM(s.quantity * b.price_per_unit) AS total_sales_amount,
    (SUM(s.quantity * b.price_per_unit) / 
        SUM(SUM(s.quantity * b.price_per_unit)) OVER (PARTITION BY p.pub_id)) * 100 AS category_contribution_percentage
FROM sales s
JOIN beverages b ON s.beverage_id = b.beverage_id
JOIN pubs p ON s.pub_id = p.pub_id
GROUP BY p.pub_id, p.pub_name, b.category
ORDER BY p.pub_id, b.category;

